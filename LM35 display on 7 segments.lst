CCS PCM C Compiler, Version 4.074, 22034               08-Jun-22 02:17

               Filename: LM35 display on 7 segments.lst

               ROM used: 1088 words (13%)
                         Largest free fragment is 2048
               RAM used: 35 (10%) at main() level
                         60 (16%) worst case
               Stack:    3 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   3BC
0003:  NOP
.................... #include<16f887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
.................... #list 
....................  
.................... #device      adc=10 
.................... #Fuses   intrc_io 
.................... #use delay(clock=8M) 
*
0313:  MOVLW  3D
0314:  MOVWF  04
0315:  BCF    03.7
0316:  MOVF   00,W
0317:  BTFSC  03.2
0318:  GOTO   326
0319:  MOVLW  02
031A:  MOVWF  78
031B:  CLRF   77
031C:  DECFSZ 77,F
031D:  GOTO   31C
031E:  DECFSZ 78,F
031F:  GOTO   31B
0320:  MOVLW  97
0321:  MOVWF  77
0322:  DECFSZ 77,F
0323:  GOTO   322
0324:  DECFSZ 00,F
0325:  GOTO   319
.................... #use rs232(baud=2400,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
.................... #define     coi      pin_e1 
....................  
.................... signed int32    nd,ndt,ch,chay; 
.................... char     data; 
.................... unsigned int8   ma7doan[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff}; 
*
03DF:  MOVLW  C0
03E0:  BCF    03.6
03E1:  MOVWF  31
03E2:  MOVLW  F9
03E3:  MOVWF  32
03E4:  MOVLW  A4
03E5:  MOVWF  33
03E6:  MOVLW  B0
03E7:  MOVWF  34
03E8:  MOVLW  99
03E9:  MOVWF  35
03EA:  MOVLW  92
03EB:  MOVWF  36
03EC:  MOVLW  82
03ED:  MOVWF  37
03EE:  MOVLW  F8
03EF:  MOVWF  38
03F0:  MOVLW  80
03F1:  MOVWF  39
03F2:  MOVLW  90
03F3:  MOVWF  3A
03F4:  MOVLW  FF
03F5:  MOVWF  3B
....................  
.................... void nhan_dl() 
.................... { 
....................    if(kbhit()) 
*
00CC:  BTFSS  0C.5
00CD:  GOTO   0EA
....................    { 
....................       data=getc(); 
00CE:  BTFSS  0C.5
00CF:  GOTO   0CE
00D0:  MOVF   1A,W
00D1:  MOVWF  30
....................       if(data=='S')         
00D2:  MOVF   30,W
00D3:  SUBLW  53
00D4:  BTFSS  03.2
00D5:  GOTO   0E9
....................       { 
....................          ndt=nd; 
00D6:  MOVF   23,W
00D7:  MOVWF  27
00D8:  MOVF   22,W
00D9:  MOVWF  26
00DA:  MOVF   21,W
00DB:  MOVWF  25
00DC:  MOVF   20,W
00DD:  MOVWF  24
....................          printf("%ld",nd);    
00DE:  MOVLW  41
00DF:  MOVWF  04
00E0:  MOVF   23,W
00E1:  MOVWF  40
00E2:  MOVF   22,W
00E3:  MOVWF  3F
00E4:  MOVF   21,W
00E5:  MOVWF  3E
00E6:  MOVF   20,W
00E7:  MOVWF  3D
00E8:  CALL   046
....................       } 
....................    } 
....................    else 
00E9:  GOTO   10D
....................    { 
....................       if(ndt!=nd) 
00EA:  MOVF   20,W
00EB:  SUBWF  24,W
00EC:  BTFSS  03.2
00ED:  GOTO   0FA
00EE:  MOVF   21,W
00EF:  SUBWF  25,W
00F0:  BTFSS  03.2
00F1:  GOTO   0FA
00F2:  MOVF   22,W
00F3:  SUBWF  26,W
00F4:  BTFSS  03.2
00F5:  GOTO   0FA
00F6:  MOVF   23,W
00F7:  SUBWF  27,W
00F8:  BTFSC  03.2
00F9:  GOTO   10D
....................       { 
....................          ndt=nd; 
00FA:  MOVF   23,W
00FB:  MOVWF  27
00FC:  MOVF   22,W
00FD:  MOVWF  26
00FE:  MOVF   21,W
00FF:  MOVWF  25
0100:  MOVF   20,W
0101:  MOVWF  24
....................          printf("%ld",nd); 
0102:  MOVLW  41
0103:  MOVWF  04
0104:  MOVF   23,W
0105:  MOVWF  40
0106:  MOVF   22,W
0107:  MOVWF  3F
0108:  MOVF   21,W
0109:  MOVWF  3E
010A:  MOVF   20,W
010B:  MOVWF  3D
010C:  CALL   046
....................       }    
....................    }    
.................... } 
010D:  BCF    0A.3
010E:  BCF    0A.4
010F:  GOTO   425 (RETURN)
....................  
.................... void doc_nd() 
.................... { 
....................    nd=read_adc(); 
*
017D:  BSF    1F.1
017E:  BTFSC  1F.1
017F:  GOTO   17E
0180:  MOVF   1E,W
0181:  MOVWF  7A
0182:  BSF    03.5
0183:  MOVF   1E,W
0184:  MOVWF  77
0185:  MOVF   7A,W
0186:  MOVWF  78
0187:  CLRF   79
0188:  CLRF   7A
0189:  MOVF   7A,W
018A:  BCF    03.5
018B:  MOVWF  23
018C:  MOVF   79,W
018D:  MOVWF  22
018E:  MOVF   78,W
018F:  MOVWF  21
0190:  MOVF   77,W
0191:  MOVWF  20
....................    nd=nd/2.046; 
0192:  MOVF   23,W
0193:  MOVWF  40
0194:  MOVF   22,W
0195:  MOVWF  3F
0196:  MOVF   21,W
0197:  MOVWF  3E
0198:  MOVF   20,W
0199:  MOVWF  3D
*
01C7:  MOVF   7A,W
01C8:  MOVWF  40
01C9:  MOVF   79,W
01CA:  MOVWF  3F
01CB:  MOVF   78,W
01CC:  MOVWF  3E
01CD:  MOVF   77,W
01CE:  MOVWF  3D
01CF:  MOVLW  AA
01D0:  MOVWF  44
01D1:  MOVLW  F1
01D2:  MOVWF  43
01D3:  MOVLW  02
01D4:  MOVWF  42
01D5:  MOVLW  80
01D6:  MOVWF  41
*
02A0:  MOVF   7A,W
02A1:  MOVWF  40
02A2:  MOVF   79,W
02A3:  MOVWF  3F
02A4:  MOVF   78,W
02A5:  MOVWF  3E
02A6:  MOVF   77,W
02A7:  MOVWF  3D
*
02C6:  MOVF   7A,W
02C7:  MOVWF  23
02C8:  MOVF   79,W
02C9:  MOVWF  22
02CA:  MOVF   78,W
02CB:  MOVWF  21
02CC:  MOVF   77,W
02CD:  MOVWF  20
....................    ch=ma7doan[nd/10]; 
02CE:  MOVF   23,W
02CF:  MOVWF  40
02D0:  MOVF   22,W
02D1:  MOVWF  3F
02D2:  MOVF   21,W
02D3:  MOVWF  3E
02D4:  MOVF   20,W
02D5:  MOVWF  3D
02D6:  CLRF   44
02D7:  CLRF   43
02D8:  CLRF   42
02D9:  MOVLW  0A
02DA:  MOVWF  41
02DB:  CALL   110
02DC:  MOVF   7A,W
02DD:  MOVWF  40
02DE:  MOVF   79,W
02DF:  MOVWF  3F
02E0:  MOVF   78,W
02E1:  MOVWF  3E
02E2:  MOVF   77,W
02E3:  MOVWF  3D
02E4:  MOVLW  31
02E5:  ADDWF  77,W
02E6:  MOVWF  04
02E7:  BCF    03.7
02E8:  BTFSC  78.0
02E9:  BSF    03.7
02EA:  MOVF   00,W
02EB:  MOVWF  77
02EC:  CLRF   78
02ED:  CLRF   79
02EE:  CLRF   7A
02EF:  MOVF   7A,W
02F0:  MOVWF  2B
02F1:  MOVF   79,W
02F2:  MOVWF  2A
02F3:  MOVF   78,W
02F4:  MOVWF  29
02F5:  MOVF   77,W
02F6:  MOVWF  28
....................    if(ch==0xc0)         
02F7:  MOVF   28,W
02F8:  SUBLW  C0
02F9:  BTFSS  03.2
02FA:  GOTO   309
02FB:  MOVF   29,F
02FC:  BTFSS  03.2
02FD:  GOTO   309
02FE:  MOVF   2A,F
02FF:  BTFSS  03.2
0300:  GOTO   309
0301:  MOVF   2B,F
0302:  BTFSS  03.2
0303:  GOTO   309
....................    ch=0xff; 
0304:  CLRF   2B
0305:  CLRF   2A
0306:  CLRF   29
0307:  MOVLW  FF
0308:  MOVWF  28
....................    chay++; 
0309:  MOVLW  01
030A:  ADDWF  2C,F
030B:  BTFSC  03.0
030C:  INCF   2D,F
030D:  BTFSC  03.2
030E:  INCF   2E,F
030F:  BTFSC  03.2
0310:  INCF   2F,F
....................    delay_ms(10); 
0311:  MOVLW  0A
0312:  MOVWF  3D
....................    if(chay<51) 
*
0326:  BTFSC  2F.7
0327:  GOTO   335
0328:  MOVF   2F,F
0329:  BTFSS  03.2
032A:  GOTO   361
032B:  MOVF   2E,F
032C:  BTFSS  03.2
032D:  GOTO   361
032E:  MOVF   2D,F
032F:  BTFSS  03.2
0330:  GOTO   361
0331:  MOVF   2C,W
0332:  SUBLW  32
0333:  BTFSS  03.0
0334:  GOTO   361
....................    { 
....................       output_d(ch);      
0335:  BSF    03.5
0336:  CLRF   08
0337:  BCF    03.5
0338:  MOVF   28,W
0339:  MOVWF  08
.................... 	  output_b(ma7doan[nd%10]); 
033A:  MOVF   23,W
033B:  MOVWF  40
033C:  MOVF   22,W
033D:  MOVWF  3F
033E:  MOVF   21,W
033F:  MOVWF  3E
0340:  MOVF   20,W
0341:  MOVWF  3D
0342:  CLRF   44
0343:  CLRF   43
0344:  CLRF   42
0345:  MOVLW  0A
0346:  MOVWF  41
0347:  CALL   110
0348:  MOVF   00,W
0349:  MOVWF  3D
034A:  INCF   04,F
034B:  MOVF   00,W
034C:  MOVWF  3E
034D:  INCF   04,F
034E:  MOVF   00,W
034F:  MOVWF  3F
0350:  INCF   04,F
0351:  MOVF   00,W
0352:  MOVWF  40
0353:  MOVLW  31
0354:  ADDWF  3D,W
0355:  MOVWF  04
0356:  BCF    03.7
0357:  BTFSC  3E.0
0358:  BSF    03.7
0359:  MOVF   00,W
035A:  MOVWF  41
035B:  BSF    03.5
035C:  CLRF   06
035D:  BCF    03.5
035E:  MOVF   41,W
035F:  MOVWF  06
....................    } 
....................    else if(chay<60) 
0360:  GOTO   3B9
0361:  BTFSC  2F.7
0362:  GOTO   370
0363:  MOVF   2F,F
0364:  BTFSS  03.2
0365:  GOTO   3B5
0366:  MOVF   2E,F
0367:  BTFSS  03.2
0368:  GOTO   3B5
0369:  MOVF   2D,F
036A:  BTFSS  03.2
036B:  GOTO   3B5
036C:  MOVF   2C,W
036D:  SUBLW  3B
036E:  BTFSS  03.0
036F:  GOTO   3B5
....................    { 
....................       if(nd<35)   
0370:  BTFSC  23.7
0371:  GOTO   37F
0372:  MOVF   23,F
0373:  BTFSS  03.2
0374:  GOTO   3AB
0375:  MOVF   22,F
0376:  BTFSS  03.2
0377:  GOTO   3AB
0378:  MOVF   21,F
0379:  BTFSS  03.2
037A:  GOTO   3AB
037B:  MOVF   20,W
037C:  SUBLW  22
037D:  BTFSS  03.0
037E:  GOTO   3AB
....................       { 
....................          output_d(ch);      
037F:  BSF    03.5
0380:  CLRF   08
0381:  BCF    03.5
0382:  MOVF   28,W
0383:  MOVWF  08
....................          output_b(ma7doan[nd%10]);       
0384:  MOVF   23,W
0385:  MOVWF  40
0386:  MOVF   22,W
0387:  MOVWF  3F
0388:  MOVF   21,W
0389:  MOVWF  3E
038A:  MOVF   20,W
038B:  MOVWF  3D
038C:  CLRF   44
038D:  CLRF   43
038E:  CLRF   42
038F:  MOVLW  0A
0390:  MOVWF  41
0391:  CALL   110
0392:  MOVF   00,W
0393:  MOVWF  3D
0394:  INCF   04,F
0395:  MOVF   00,W
0396:  MOVWF  3E
0397:  INCF   04,F
0398:  MOVF   00,W
0399:  MOVWF  3F
039A:  INCF   04,F
039B:  MOVF   00,W
039C:  MOVWF  40
039D:  MOVLW  31
039E:  ADDWF  3D,W
039F:  MOVWF  04
03A0:  BCF    03.7
03A1:  BTFSC  3E.0
03A2:  BSF    03.7
03A3:  MOVF   00,W
03A4:  MOVWF  41
03A5:  BSF    03.5
03A6:  CLRF   06
03A7:  BCF    03.5
03A8:  MOVF   41,W
03A9:  MOVWF  06
....................       }  
....................       else 
03AA:  GOTO   3B4
....................       { 
....................          output_d(0xff);     
03AB:  BSF    03.5
03AC:  CLRF   08
03AD:  MOVLW  FF
03AE:  BCF    03.5
03AF:  MOVWF  08
.................... 		 output_b(0xff);     
03B0:  BSF    03.5
03B1:  CLRF   06
03B2:  BCF    03.5
03B3:  MOVWF  06
....................       } 
....................    } 
....................    else      
03B4:  GOTO   3B9
.................... chay=0; 
03B5:  CLRF   2F
03B6:  CLRF   2E
03B7:  CLRF   2D
03B8:  CLRF   2C
.................... } 
03B9:  BCF    0A.3
03BA:  BCF    0A.4
03BB:  GOTO   426 (RETURN)
....................  
.................... void main() 
.................... {   
03BC:  CLRF   04
03BD:  BCF    03.7
03BE:  MOVLW  1F
03BF:  ANDWF  03,F
03C0:  MOVLW  71
03C1:  BSF    03.5
03C2:  MOVWF  0F
03C3:  MOVF   0F,W
03C4:  BSF    03.6
03C5:  BSF    07.3
03C6:  MOVLW  40
03C7:  BCF    03.6
03C8:  MOVWF  19
03C9:  MOVLW  03
03CA:  MOVWF  1A
03CB:  MOVLW  A6
03CC:  MOVWF  18
03CD:  MOVLW  90
03CE:  BCF    03.5
03CF:  MOVWF  18
03D0:  BSF    03.5
03D1:  BSF    03.6
03D2:  MOVF   09,W
03D3:  ANDLW  C0
03D4:  MOVWF  09
03D5:  BCF    03.6
03D6:  BCF    1F.4
03D7:  BCF    1F.5
03D8:  MOVLW  00
03D9:  BSF    03.6
03DA:  MOVWF  08
03DB:  BCF    03.5
03DC:  CLRF   07
03DD:  CLRF   08
03DE:  CLRF   09
....................    set_tris_a(0xff); 
*
03F7:  MOVLW  FF
03F8:  BSF    03.5
03F9:  MOVWF  05
....................    set_tris_b(0x00);        
03FA:  MOVLW  00
03FB:  MOVWF  06
....................    set_tris_c(0x80); 
03FC:  MOVLW  80
03FD:  MOVWF  07
03FE:  BCF    03.5
03FF:  MOVWF  3C
....................    set_tris_d(0x00);       
0400:  MOVLW  00
0401:  BSF    03.5
0402:  MOVWF  08
....................     
....................    setup_adc(adc_clock_div_32);   
0403:  BCF    03.5
0404:  BCF    1F.6
0405:  BSF    1F.7
0406:  BSF    03.5
0407:  BSF    1F.7
0408:  BCF    03.5
0409:  BSF    1F.0
....................    setup_adc_ports(san4); 
040A:  BSF    03.5
040B:  BSF    03.6
040C:  MOVF   09,W
040D:  ANDLW  C0
040E:  MOVWF  09
040F:  BCF    03.6
0410:  BCF    1F.4
0411:  BCF    1F.5
0412:  MOVLW  10
0413:  BSF    03.6
0414:  MOVWF  08
....................    set_adc_channel(4); 
0415:  MOVWF  78
0416:  BCF    03.5
0417:  BCF    03.6
0418:  MOVF   1F,W
0419:  ANDLW  C3
041A:  IORWF  78,W
041B:  MOVWF  1F
....................    chay=0;         
041C:  CLRF   2F
041D:  CLRF   2E
041E:  CLRF   2D
041F:  CLRF   2C
....................    output_high(coi); 
0420:  BSF    03.5
0421:  BCF    09.1
0422:  BCF    03.5
0423:  BSF    09.1
....................    while(true) 
....................    { 
....................       nhan_dl(); 
0424:  GOTO   0CC
....................       doc_nd(); 
0425:  GOTO   17D
....................       if(nd<55)  
0426:  BTFSC  23.7
0427:  GOTO   435
0428:  MOVF   23,F
0429:  BTFSS  03.2
042A:  GOTO   43A
042B:  MOVF   22,F
042C:  BTFSS  03.2
042D:  GOTO   43A
042E:  MOVF   21,F
042F:  BTFSS  03.2
0430:  GOTO   43A
0431:  MOVF   20,W
0432:  SUBLW  36
0433:  BTFSS  03.0
0434:  GOTO   43A
....................       output_high(coi); 
0435:  BSF    03.5
0436:  BCF    09.1
0437:  BCF    03.5
0438:  BSF    09.1
....................       else   
0439:  GOTO   43E
....................       output_low(coi);   
043A:  BSF    03.5
043B:  BCF    09.1
043C:  BCF    03.5
043D:  BCF    09.1
....................    } 
043E:  GOTO   424
.................... } 
....................  
....................  
043F:  SLEEP

Configuration Fuses:
   Word  1: 2FE4   INTRC_IO NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   NOWRT BORV40
